// Code generated by sqlc. DO NOT EDIT.

package models

import (
	"database/sql"
	"fmt"
	"time"
)

type DeliveredStatus string

const (
	DeliveredStatusNotYetReported DeliveredStatus = "not_yet_reported"
	DeliveredStatusDelivered      DeliveredStatus = "delivered"
	DeliveredStatusNotDelivered   DeliveredStatus = "not_delivered"
)

func (e *DeliveredStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DeliveredStatus(s)
	case string:
		*e = DeliveredStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for DeliveredStatus: %T", src)
	}
	return nil
}

type ImportStatus string

const (
	ImportStatusPending  ImportStatus = "pending"
	ImportStatusImported ImportStatus = "imported"
	ImportStatusFailed   ImportStatus = "failed"
)

func (e *ImportStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ImportStatus(s)
	case string:
		*e = ImportStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for ImportStatus: %T", src)
	}
	return nil
}

type Roles string

const (
	RolesAdmin  Roles = "admin"
	RolesVendor Roles = "vendor"
	RolesClient Roles = "client"
)

func (e *Roles) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Roles(s)
	case string:
		*e = Roles(s)
	default:
		return fmt.Errorf("unsupported scan type for Roles: %T", src)
	}
	return nil
}

type Game struct {
	ID           int64        `json:"id"`
	GameBundleID string       `json:"game_bundle_id"`
	ReadableName string       `json:"readable_name"`
	Supported    sql.NullBool `json:"supported"`
}

type Inventory struct {
	ID              int64           `json:"id"`
	ProdID          sql.NullInt32   `json:"prod_id"`
	TransactionID   sql.NullString  `json:"transaction_id"`
	Receipt         sql.NullString  `json:"receipt"`
	Available       sql.NullBool    `json:"available"`
	CreatedAt       time.Time       `json:"created_at"`
	UpdatedAt       sql.NullTime    `json:"updated_at"`
	DeletedAt       sql.NullTime    `json:"deleted_at"`
	TransactionTime time.Time       `json:"transaction_time"`
	Uuid            string          `json:"uuid"`
	ReservedForUser sql.NullInt32   `json:"reserved_for_user"`
	Delivered       DeliveredStatus `json:"delivered"`
	TempReceipt     sql.NullString  `json:"temp_receipt"`
}

type Procurement struct {
	ID           int64          `json:"id"`
	Filename     string         `json:"filename"`
	Status       ImportStatus   `json:"status"`
	FailedReason sql.NullString `json:"failed_reason"`
	CreatedAt    time.Time      `json:"created_at"`
	UpdatedAt    sql.NullTime   `json:"updated_at"`
	DeletedAt    sql.NullTime   `json:"deleted_at"`
}

type ProductInfo struct {
	ID           int64          `json:"id"`
	ProdName     sql.NullString `json:"prod_name"`
	ProdID       string         `json:"prod_id"`
	ProdDesc     sql.NullString `json:"prod_desc"`
	Price        sql.NullString `json:"price"`
	GameBundleID string         `json:"game_bundle_id"`
}

type User struct {
	ID            int64        `json:"id"`
	Username      string       `json:"username"`
	Password      string       `json:"password"`
	Role          Roles        `json:"role"`
	CreatedAt     time.Time    `json:"created_at"`
	UpdatedAt     sql.NullTime `json:"updated_at"`
	DeletedAt     sql.NullTime `json:"deleted_at"`
	Uuid          string       `json:"uuid"`
	CanBeExported sql.NullBool `json:"can_be_exported"`
}
